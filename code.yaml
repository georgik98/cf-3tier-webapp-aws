AWSTemplateFormatVersion: 2010-09-09
Resources:
  VPC: #Create 1 VPC for the whole project
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 172.20.0.0/20
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags:
        - Key: Name
          Value: VPC
  PublicSubnet1: #First public subnet in eu-central-1a AZ
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.20.1.0/24
      AvailabilityZone: 'eu-central-1a'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Public Subnet (web) - eu-central-1a'
  PublicSubnet2: #Second public subnet in eu-central-1b AZ
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.20.2.0/24
      AvailabilityZone: 'eu-central-1b'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Public Subnet (web) - eu-central-1b'
  PublicSubnet3: #Third public subnet in eu-central-1c AZ
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.20.3.0/24
      AvailabilityZone: 'eu-central-1c'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Public Subnet (web) - eu-central-1c'
  InternetGateway: # Internet Gateway for internet access for the public subnets
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway
  AttachInternetGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  RouteTable: 
    Type: 'AWS::EC2::RouteTable'
    Properties:
      Tags:
        - Key: Name
          Value: RouteTable
      VpcId: !Ref VPC
  PublicRouteOne: 
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
  
  PublicSubnetRouteTableAssociation1: #route table association with public subnet 1
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnetRouteTableAssociation2: #route table association with public subnet 2
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet2
  PublicSubnetRouteTableAssociation3: #route table association with public subnet 3
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet3

# Private subnets
#---------------------------------------------------------------- 
  PrivateSubnetApp1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.20.4.0/24
      AvailabilityZone: 'eu-central-1a'
      Tags:
        - Key: Name
          Value: 'Private Subnet (app) - eu-central-1a'
  PrivateSubnetApp2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.20.5.0/24
      AvailabilityZone: 'eu-central-1b'
      Tags:
        - Key: Name
          Value: 'Private Subnet (app) - eu-central-1b'
  PrivateSubnetApp3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.20.6.0/24
      AvailabilityZone: 'eu-central-1c'
      Tags:
        - Key: Name
          Value: 'Private Subnet (app) - eu-central-1c'
  NatGatewayEipOne:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: VPC
  NatGatewayOne:
    Type: 'AWS::EC2::NatGateway'
    DependsOn: NatGatewayEipOne
    Properties:
      AllocationId:
        Fn::GetAtt : [NatGatewayEipOne, AllocationId]  
      SubnetId: !Ref PublicSubnet1  
      Tags:
        - Key: Name
          Value: NatGatewayOne
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable
  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: NatGatewayOne
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGatewayOne
  PrivateSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetApp1
      RouteTableId: !Ref PrivateRouteTable


Outputs:
  VpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VpcId"
  NatGatewayIP:
    Description: 'EIP associated with the NAT Gateway'
    Value: !Ref NatGatewayEipOne